# WebAssembly build and development

.PHONY: wasm-build wasm-serve wasm-dev wasm-clean

# Build WebAssembly binary with versioning
wasm-build:
	@echo "Building WebAssembly with versioning..."
	$(eval VERSION := $(shell ./scripts/headver.sh))
	$(eval WASM_FILE := web/static/imagekit-$(VERSION).wasm)
	GOOS=js GOARCH=wasm go build -o $(WASM_FILE) cmd/wasm/main.go
	@echo '{"version":"$(VERSION)","wasmFile":"static/imagekit-$(VERSION).wasm","buildTime":"'$(shell date -u +%Y-%m-%dT%H:%M:%SZ)'"}' > web/version.json
	@echo "WebAssembly build complete: $(WASM_FILE)"
	@ls -lh $(WASM_FILE) web/version.json

# Serve WebAssembly app locally
wasm-serve: wasm-build
	@echo "Starting local server at http://localhost:8080"
	@echo "Press Ctrl+C to stop"
	@cd web && python3 -m http.server 8080

# Development mode (build and serve)
wasm-dev: wasm-build wasm-serve

# Clean WebAssembly build
wasm-clean:
	rm -f web/static/imagekit*.wasm web/version.json
	@echo "WebAssembly build cleaned"

# Help
wasm-help:
	@echo "WebAssembly Makefile commands:"
	@echo "  make -f Makefile.wasm wasm-build  - Build WebAssembly binary"
	@echo "  make -f Makefile.wasm wasm-serve  - Build and serve locally"
	@echo "  make -f Makefile.wasm wasm-dev    - Development mode (alias for wasm-serve)"
	@echo "  make -f Makefile.wasm wasm-clean  - Clean WebAssembly build"
	@echo ""
	@echo "After running wasm-serve, open http://localhost:8080 in your browser"